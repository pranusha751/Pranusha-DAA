import sys

# Number of routers
n = 4

# Initialize the distance matrix
dist = [[sys.maxsize] * n for _ in range(n)]

# Example graph (adjacency matrix)
graph = [
    [0, 3, sys.maxsize, 7],
    [8, 0, 2, sys.maxsize],
    [5, sys.maxsize, 0, 1],
    [2, sys.maxsize, sys.maxsize, 0]
]

# Fill the distance matrix with the graph values
for i in range(n):
    for j in range(n):
        dist[i][j] = graph[i][j]

# Floyd's Algorithm
for k in range(n):
    for i in range(n):
        for j in range(n):
            if dist[i][j] > dist[i][k] + dist[k][j]:
                dist[i][j] = dist[i][k] + dist[k][j]

# Print the shortest distance matrix
for i in range(n):
    for j in range(n):
        if dist[i][j] == sys.maxsize:
            print("INF", end=" ")
        else:
            print(dist[i][j], end=" ")
    print()
